{
  "dist/Components/Callout.js": {
    "description": "Use callouts to display important information or messages.",
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Optionally include children."
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Optionally include additional class name(s)."
      },
      "heading": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Optionally include a heading."
      },
      "type": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'attention'",
              "computed": false
            },
            {
              "value": "'danger'",
              "computed": false
            },
            {
              "value": "'info'",
              "computed": false
            },
            {
              "value": "'success'",
              "computed": false
            },
            {
              "value": "'warning'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Optionally include type.",
        "defaultValue": {
          "value": "'info'",
          "computed": false
        }
      }
    }
  },
  "dist/Components/Card.js": {
    "description": "",
    "props": {
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Optionally include additional class name(s)."
      },
      "children": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": ""
      },
      "imageSrc": {
        "type": {
          "name": "array"
        },
        "required": false,
        "description": ""
      },
      "listingUrl": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      },
      "fullAddress": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      },
      "address": {
        "type": {
          "name": "shape",
          "value": {
            "city": {
              "name": "string"
            },
            "street": {
              "name": "string"
            },
            "state": {
              "name": "string"
            },
            "neighborhood": {
              "name": "string"
            }
          }
        },
        "required": false,
        "description": ""
      },
      "listPrice": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      },
      "pricePerSqft": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      },
      "sash": {
        "type": {
          "name": "shape",
          "value": {
            "type": {
              "name": "string"
            },
            "timeStamp": {
              "name": "string"
            },
            "reducedAmount": {
              "name": "string"
            },
            "reducedPercent": {
              "name": "string"
            }
          }
        },
        "required": false,
        "description": ""
      },
      "beds": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      },
      "baths": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      },
      "sqft": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      },
      "acres": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      }
    }
  },
  "dist/Components/CardSmall.js": {
    "description": "",
    "props": {
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Optionally include additional class name(s)."
      },
      "children": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": ""
      },
      "imageSrc": {
        "type": {
          "name": "array"
        },
        "required": false,
        "description": ""
      },
      "listingUrl": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      },
      "fullAddress": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      },
      "address": {
        "type": {
          "name": "shape",
          "value": {
            "city": {
              "name": "string"
            },
            "street": {
              "name": "string"
            },
            "state": {
              "name": "string"
            },
            "neighborhood": {
              "name": "string"
            }
          }
        },
        "required": false,
        "description": ""
      },
      "listPrice": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      },
      "pricePerSqft": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      },
      "sash": {
        "type": {
          "name": "shape",
          "value": {
            "type": {
              "name": "string"
            },
            "timeStamp": {
              "name": "string"
            },
            "reducedAmount": {
              "name": "string"
            },
            "reducedPercent": {
              "name": "string"
            }
          }
        },
        "required": false,
        "description": ""
      },
      "beds": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      },
      "baths": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      },
      "sqft": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      },
      "acres": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      }
    }
  },
  "dist/Components/Circle.js": {
    "description": "Circles are colored dots representing time.",
    "props": {
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Optionally include additional class name(s)."
      },
      "type": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "''",
              "computed": false
            },
            {
              "value": "'now'",
              "computed": false
            },
            {
              "value": "'today'",
              "computed": false
            },
            {
              "value": "'14-days'",
              "computed": false
            },
            {
              "value": "'90-days'",
              "computed": false
            },
            {
              "value": "'forever'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Optionally include type.",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      }
    }
  },
  "dist/Components/FauxLink.js": {
    "description": "Faux Link allows the user to create text that resembles a link\n without worrying about the href accidentally causing a route change.\nIt is intended to be used with actionable text that does not navigate.",
    "props": {}
  },
  "dist/Components/Fauxbox.js": {
    "description": "Much like the similarly named hairstyle of the '00s, the Fauxbox replaces something functional with something flashy in hopes to lure the user into touching it.\nFauxbox is a drop-in replacement for checkboxes in Boomstrap.",
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "Identifier used to link the label and the checkbox"
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Optional class to provide to div wrapping Fauxbox"
      },
      "labelClass": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Optional class to provide to wrap the label"
      },
      "checked": {
        "type": {
          "name": "bool"
        },
        "required": true,
        "description": "Indicated whether or not the Fauxbox is checked"
      },
      "onClick": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Event to fire when the Fauxbox is clicked"
      },
      "inline": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Indicates whether or not the Fauxbox is a block element or inline-block element"
      },
      "label": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Label that is tied to updating the Fauxbox"
      }
    }
  },
  "dist/Components/Fauxdio.js": {
    "description": "Display radio buttons in style with the Fauxdio",
    "props": {
      "radioID": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "Identifier provided to link together the input with the label"
      },
      "radioClass": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Optional class to pass to the div that wraps the Fauxdio"
      },
      "radioName": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "Identifier provided to link together the radio group"
      },
      "labelClass": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Optional class to pass to the label that accompanies the input"
      },
      "checked": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Indicates whether or not the Fauxdio is selected",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "value": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "string"
            },
            {
              "name": "number"
            }
          ]
        },
        "required": false,
        "description": "Provided for information on submitting forms"
      },
      "onChange": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "A callback to fire when the Fauxdio is selected.",
        "defaultValue": {
          "value": "function onChange() {}",
          "computed": false
        }
      },
      "inline": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Indicates whether or not the Fauxdio is block element or inline-block element"
      },
      "label": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "A label to accompany the Fauxdio.  Can be text or a React node"
      }
    }
  },
  "dist/Components/FauxdioGroup.js": {
    "description": "Link your stylish Fauxdios together with the stylish FauxioGroup",
    "props": {
      "list": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "shape",
            "value": {
              "id": {
                "name": "union",
                "value": [
                  {
                    "name": "string"
                  },
                  {
                    "name": "number"
                  }
                ]
              },
              "label": {
                "name": "union",
                "value": [
                  {
                    "name": "string"
                  },
                  {
                    "name": "element"
                  }
                ]
              },
              "value": {
                "name": "union",
                "value": [
                  {
                    "name": "string"
                  },
                  {
                    "name": "number"
                  }
                ]
              }
            }
          }
        },
        "required": true,
        "description": "The list of items"
      },
      "groupName": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "The name of the group"
      },
      "selectedValue": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "string"
            },
            {
              "name": "number"
            }
          ]
        },
        "required": false,
        "description": "Sets a given item in the list to be (pre)selected"
      },
      "onClick": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "A function to run when an item in the list is clicked. The value of the item is passed to the function"
      },
      "fauxdioProps": {
        "type": {
          "name": "shape",
          "value": "unkown"
        },
        "required": false,
        "description": "A place for the various props you want to pass to the Fauxdios"
      }
    }
  },
  "dist/Components/IFrame.js": {
    "description": "",
    "props": {
      "src": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      },
      "width": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": ""
      },
      "height": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": ""
      },
      "onCloseFrame": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": ""
      }
    }
  },
  "dist/Components/Icon.js": {
    "description": "",
    "props": {
      "icon": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "Icon name."
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Optionally include additional class name(s).",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      }
    }
  },
  "dist/Components/IconTooltip.js": {
    "description": "",
    "props": {
      "showIf": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": ""
      },
      "text": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      },
      "icon": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      }
    }
  },
  "dist/Components/ImageWithFallback.js": {
    "description": "",
    "props": {
      "src": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      },
      "fallbackSrc": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      }
    }
  },
  "dist/Components/LeadCategory.js": {
    "description": "",
    "props": {
      "category": {
        "type": {
          "name": "number"
        },
        "required": true,
        "description": ""
      },
      "muted": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "disabled": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      }
    }
  },
  "dist/Components/LeadCategoryByType.js": {
    "description": "",
    "props": {
      "buyer": {
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "seller": {
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      }
    }
  },
  "dist/Components/LeadType.js": {
    "description": "",
    "props": {
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "buyer": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Indicates whether or not this is a buyer lead type.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "seller": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Indicates whether or not this is a seller lead type.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "square": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "For square (and stacked b/s) lead type labels, set square to true.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "small": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Small augments square and produces leadtype-square-sm.\nSmall by itself does nothing.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      }
    }
  },
  "dist/Components/Loader.js": {
    "description": "",
    "props": {
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      },
      "desaturated": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": ""
      },
      "small": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": ""
      },
      "center": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": ""
      }
    }
  },
  "dist/Components/Marker.js": {
    "description": "Use markers to represent current searching / filtering parameters.",
    "props": {
      "type": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "'default'",
          "computed": false
        }
      },
      "label": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      },
      "showClose": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      },
      "closeClass": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "onClose": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "function onClose() {}",
          "computed": false
        }
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      }
    }
  },
  "dist/Components/MessageFace.js": {
    "description": "",
    "props": {
      "placement": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "''",
              "computed": false
            },
            {
              "value": "'left'",
              "computed": false
            },
            {
              "value": "'top'",
              "computed": false
            },
            {
              "value": "'right'",
              "computed": false
            },
            {
              "value": "'bottom'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": ""
      }
    }
  },
  "dist/Components/NavLinksBar.js": {
    "description": "Nav Links Bar provides an animated `tab switcher`-like control",
    "props": {
      "activeKey": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "The current key of the child that should have the bar",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "navClass": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Optional class for wrapping the list",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "barClass": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Optional class for wrapping the bar that slides",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "orientation": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'vertical'",
              "computed": false
            },
            {
              "value": "'horizontal'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Direction of the list ('vertical' or 'horizontal'), defaults to 'vertical'",
        "defaultValue": {
          "value": "'vertical'",
          "computed": false
        }
      },
      "children": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Actual Nav Links to render (expected in <li><a /></li> format)\nThis property is provided by React children"
      }
    }
  },
  "dist/Components/Pager.js": {
    "description": "",
    "props": {
      "currentPage": {
        "type": {
          "name": "number"
        },
        "required": true,
        "description": ""
      },
      "totalItems": {
        "type": {
          "name": "number"
        },
        "required": true,
        "description": ""
      },
      "itemsPerPage": {
        "type": {
          "name": "number"
        },
        "required": true,
        "description": ""
      },
      "onPage": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "function onPage() {}",
          "computed": false
        }
      },
      "disabled": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      }
    }
  },
  "dist/Components/ProfilePic.js": {
    "description": "",
    "props": {
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Optionally, add additional classes to the component.",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "small": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Optionally, set small to use small profile pic.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "src": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Provide src prop when the image is available. If not set, initials will be shown.",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "initials": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "Provide initials to be displayed when photo is not present. Required as fallback to image."
      },
      "buyer": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Optionally set buyer prop if you want to show leadtype styling.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "seller": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Optionally set seller prop if you want to show leadtype styling.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      }
    }
  },
  "dist/Components/ProgressBar.js": {
    "description": "",
    "props": {
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Optionally include additional class name(s)."
      },
      "progress": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Number 1-100 representing a percentage.",
        "defaultValue": {
          "value": "0",
          "computed": false
        }
      },
      "showLabel": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Set to 'true' to show label in progress bar.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "''",
              "computed": false
            },
            {
              "value": "'xs'",
              "computed": false
            },
            {
              "value": "'sm'",
              "computed": false
            },
            {
              "value": "'lg'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Options: xs, sm, lg.",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "type": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'attention'",
              "computed": false
            },
            {
              "value": "'danger'",
              "computed": false
            },
            {
              "value": "'info'",
              "computed": false
            },
            {
              "value": "'primary'",
              "computed": false
            },
            {
              "value": "'success'",
              "computed": false
            },
            {
              "value": "'success-to-danger'",
              "computed": false
            },
            {
              "value": "'warning'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Optionally include type.",
        "defaultValue": {
          "value": "'primary'",
          "computed": false
        }
      }
    }
  },
  "dist/Components/Sash.js": {
    "description": "Use sashes for showing property status.",
    "props": {
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Optionally include additional class name(s)."
      },
      "type": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'back'",
              "computed": false
            },
            {
              "value": "'new'",
              "computed": false
            },
            {
              "value": "'off'",
              "computed": false
            },
            {
              "value": "'reduced'",
              "computed": false
            }
          ]
        },
        "required": true,
        "description": "Type is required."
      },
      "timeStamp": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "Time stamp is required."
      },
      "reducedAmount": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "For 'reduced' type, include amount property was reduced in dollars"
      },
      "reducedPercent": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "For 'reduced' type, include amount property was reduced as a percentage"
      }
    }
  },
  "dist/Components/Score.js": {
    "description": "Use scores to rank / score data.",
    "props": {
      "score": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": ""
      },
      "size": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      }
    }
  },
  "dist/Components/Switcher.js": {
    "description": "Toggle switch.",
    "props": {
      "checked": {
        "type": {
          "name": "bool"
        },
        "required": true,
        "description": ""
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Optionally include additional class name(s)."
      },
      "disabled": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Disable switcher.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "id": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      },
      "onClick": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": ""
      },
      "size": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "''",
              "computed": false
            },
            {
              "value": "'sm'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Options: sm.",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      }
    }
  },
  "dist/Components/UIMultiSelect.js": {
    "description": "",
    "props": {
      "selectedValues": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "union",
            "value": [
              {
                "name": "string"
              },
              {
                "name": "number"
              }
            ]
          }
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "[]",
          "computed": false
        }
      },
      "placeholder": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      },
      "items": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "shape",
            "value": {
              "payload": {
                "name": "union",
                "value": [
                  {
                    "name": "string"
                  },
                  {
                    "name": "number"
                  }
                ]
              },
              "text": {
                "name": "string"
              }
            }
          }
        },
        "required": false,
        "description": ""
      },
      "text": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      },
      "buttonClass": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      },
      "inputClass": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      },
      "onChange": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": ""
      },
      "disabled": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "alignRight": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      }
    }
  },
  "dist/Components/UISelect.js": {
    "description": "",
    "props": {
      "payload": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "string"
            },
            {
              "name": "number"
            }
          ]
        },
        "required": false,
        "description": "The value the selected item returns. Can be a string or number."
      },
      "text": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The label the selected item displays."
      },
      "placeholder": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The initial text the UISelect displays"
      },
      "items": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "shape",
            "value": {
              "payload": {
                "name": "union",
                "value": [
                  {
                    "name": "string"
                  },
                  {
                    "name": "number"
                  }
                ]
              },
              "text": {
                "name": "string"
              }
            }
          }
        },
        "required": false,
        "description": "The list of items to populate the dropdown; [{payload: 'value', text: 'label'}..]",
        "defaultValue": {
          "value": "[]",
          "computed": false
        }
      },
      "buttonClass": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Add a class to the button portion of the component."
      },
      "inputClass": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Add a class to the input portion of the component."
      },
      "containerClass": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Add a class to the component container.",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "includeSearchInValues": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": ""
      },
      "translateSearchValue": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": ""
      },
      "onChange": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Function to call when a selection is made."
      },
      "disabled": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Disable the element.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "alignRight": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      }
    }
  },
  "dist/Components/UITypeaheadSelect.js": {
    "description": "",
    "props": {
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Class for Container of Typeahead",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "iconClass": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Class for Icon in input",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "inputClass": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Class for input",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "placeholder": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Placeholder text for input",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "onSearch": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Function to call when the user types in the input",
        "defaultValue": {
          "value": "function onSearch() {}",
          "computed": false
        }
      },
      "onSelectMatch": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Function to call when the user selects an item in the dropdown",
        "defaultValue": {
          "value": "function onSelectMatch() {}",
          "computed": false
        }
      },
      "options": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "shape",
            "value": {
              "element": {
                "name": "node"
              },
              "payload": {
                "name": "any"
              }
            }
          }
        },
        "required": false,
        "description": "Array of options to display to the user",
        "defaultValue": {
          "value": "[]",
          "computed": false
        }
      },
      "overlayModal": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Indicates this typeahead is on a modal and must be a higher zIndex",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      }
    }
  },
  "dist/Components/UITypeaheadSelectOverlay.js": {
    "description": "",
    "props": {
      "positionLeft": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": ""
      },
      "positionLeftOverride": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": ""
      },
      "positionTop": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": ""
      },
      "searchIndex": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": ""
      },
      "selectActive": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": ""
      },
      "selectMatch": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": ""
      },
      "options": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "shape",
            "value": {
              "element": {
                "name": "element"
              },
              "payload": {
                "name": "any"
              }
            }
          }
        },
        "required": false,
        "description": ""
      },
      "overlayModal": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": ""
      }
    }
  }
}